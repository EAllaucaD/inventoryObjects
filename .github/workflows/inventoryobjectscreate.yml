name: CI Pipeline Inventory Objects Create

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
          
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      
      - name: Build the Docker image
        run: |
          cd inventoryObjectsCreate  # ðŸ‘ˆ Asegura que estÃ© en la carpeta del microservicio
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/inventoryobjectscreate:dev .
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/inventoryobjectscreate:prod .
          elif [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            docker build -t ${{ secrets.DOCKER_USERNAME }}/inventoryobjectscreate:qa .
          else
            echo "Invalid branch for building Docker image."
            exit 1
          fi
          
      - name: Push to DockerHub
        run: |
          cd inventoryObjectsCreate  # ðŸ‘ˆ TambiÃ©n en el push para asegurarse del contexto correcto
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/inventoryobjectscreate:dev
          elif [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/inventoryobjectscreate:prod
          elif [[ "${{ github.event.pull_request.base.ref }}" == "QA" ]]; then
            docker push ${{ secrets.DOCKER_USERNAME }}/inventoryobjectscreate:qa
          fi
